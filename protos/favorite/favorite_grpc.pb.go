// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.1
// source: favorite.proto

package favorite

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	DouyinFavoriteActionService_Favorite_FullMethodName     = "/favorite.DouyinFavoriteActionService/favorite"
	DouyinFavoriteActionService_Infavorite_FullMethodName   = "/favorite.DouyinFavoriteActionService/infavorite"
	DouyinFavoriteActionService_FavoriteList_FullMethodName = "/favorite.DouyinFavoriteActionService/favorite_list"
)

// DouyinFavoriteActionServiceClient is the client API for DouyinFavoriteActionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DouyinFavoriteActionServiceClient interface {
	Favorite(ctx context.Context, in *FavoriteRequest, opts ...grpc.CallOption) (*FavoriteResponse, error)
	Infavorite(ctx context.Context, in *InfavoriteRequest, opts ...grpc.CallOption) (*InfavoriteResponse, error)
	FavoriteList(ctx context.Context, in *FavoriteListRequest, opts ...grpc.CallOption) (*FavoriteListResponse, error)
}

type douyinFavoriteActionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDouyinFavoriteActionServiceClient(cc grpc.ClientConnInterface) DouyinFavoriteActionServiceClient {
	return &douyinFavoriteActionServiceClient{cc}
}

func (c *douyinFavoriteActionServiceClient) Favorite(ctx context.Context, in *FavoriteRequest, opts ...grpc.CallOption) (*FavoriteResponse, error) {
	out := new(FavoriteResponse)
	err := c.cc.Invoke(ctx, DouyinFavoriteActionService_Favorite_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *douyinFavoriteActionServiceClient) Infavorite(ctx context.Context, in *InfavoriteRequest, opts ...grpc.CallOption) (*InfavoriteResponse, error) {
	out := new(InfavoriteResponse)
	err := c.cc.Invoke(ctx, DouyinFavoriteActionService_Infavorite_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *douyinFavoriteActionServiceClient) FavoriteList(ctx context.Context, in *FavoriteListRequest, opts ...grpc.CallOption) (*FavoriteListResponse, error) {
	out := new(FavoriteListResponse)
	err := c.cc.Invoke(ctx, DouyinFavoriteActionService_FavoriteList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DouyinFavoriteActionServiceServer is the server API for DouyinFavoriteActionService service.
// All implementations must embed UnimplementedDouyinFavoriteActionServiceServer
// for forward compatibility
type DouyinFavoriteActionServiceServer interface {
	Favorite(context.Context, *FavoriteRequest) (*FavoriteResponse, error)
	Infavorite(context.Context, *InfavoriteRequest) (*InfavoriteResponse, error)
	FavoriteList(context.Context, *FavoriteListRequest) (*FavoriteListResponse, error)
	mustEmbedUnimplementedDouyinFavoriteActionServiceServer()
}

// UnimplementedDouyinFavoriteActionServiceServer must be embedded to have forward compatible implementations.
type UnimplementedDouyinFavoriteActionServiceServer struct {
}

func (UnimplementedDouyinFavoriteActionServiceServer) Favorite(context.Context, *FavoriteRequest) (*FavoriteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Favorite not implemented")
}
func (UnimplementedDouyinFavoriteActionServiceServer) Infavorite(context.Context, *InfavoriteRequest) (*InfavoriteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Infavorite not implemented")
}
func (UnimplementedDouyinFavoriteActionServiceServer) FavoriteList(context.Context, *FavoriteListRequest) (*FavoriteListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FavoriteList not implemented")
}
func (UnimplementedDouyinFavoriteActionServiceServer) mustEmbedUnimplementedDouyinFavoriteActionServiceServer() {
}

// UnsafeDouyinFavoriteActionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DouyinFavoriteActionServiceServer will
// result in compilation errors.
type UnsafeDouyinFavoriteActionServiceServer interface {
	mustEmbedUnimplementedDouyinFavoriteActionServiceServer()
}

func RegisterDouyinFavoriteActionServiceServer(s grpc.ServiceRegistrar, srv DouyinFavoriteActionServiceServer) {
	s.RegisterService(&DouyinFavoriteActionService_ServiceDesc, srv)
}

func _DouyinFavoriteActionService_Favorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DouyinFavoriteActionServiceServer).Favorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DouyinFavoriteActionService_Favorite_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DouyinFavoriteActionServiceServer).Favorite(ctx, req.(*FavoriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DouyinFavoriteActionService_Infavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfavoriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DouyinFavoriteActionServiceServer).Infavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DouyinFavoriteActionService_Infavorite_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DouyinFavoriteActionServiceServer).Infavorite(ctx, req.(*InfavoriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DouyinFavoriteActionService_FavoriteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DouyinFavoriteActionServiceServer).FavoriteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DouyinFavoriteActionService_FavoriteList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DouyinFavoriteActionServiceServer).FavoriteList(ctx, req.(*FavoriteListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DouyinFavoriteActionService_ServiceDesc is the grpc.ServiceDesc for DouyinFavoriteActionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DouyinFavoriteActionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "favorite.DouyinFavoriteActionService",
	HandlerType: (*DouyinFavoriteActionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "favorite",
			Handler:    _DouyinFavoriteActionService_Favorite_Handler,
		},
		{
			MethodName: "infavorite",
			Handler:    _DouyinFavoriteActionService_Infavorite_Handler,
		},
		{
			MethodName: "favorite_list",
			Handler:    _DouyinFavoriteActionService_FavoriteList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "favorite.proto",
}
